// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mitternacht.Services.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mitternacht.Migrations.Mitternacht
{
    [DbContext(typeof(MitternachtContext))]
    [Migration("20200705234204_RemoveUnusedColumnsFromBotConfig")]
    partial class RemoveUnusedColumnsFromBotConfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiRaidSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Seconds")
                        .HasColumnType("integer");

                    b.Property<int>("UserThreshold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("AntiRaidSetting");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiSpamIgnore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AntiSpamSettingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AntiSpamSettingId");

                    b.ToTable("AntiSpamIgnore");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiSpamSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("MessageThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("MuteTime")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("AntiSpamSetting");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BirthDateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("BirthdayMessageEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BirthDates");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BlacklistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BotConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("ItemId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BotConfigId");

                    b.ToTable("BlacklistItem");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BlockedCmdOrMdl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BotConfigId")
                        .HasColumnType("integer");

                    b.Property<int?>("BotConfigId1")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BotConfigId");

                    b.HasIndex("BotConfigId1");

                    b.ToTable("BlockedCmdOrMdl");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BotConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("BetflipMultiplier")
                        .HasColumnType("real");

                    b.Property<float>("Betroll100Multiplier")
                        .HasColumnType("real");

                    b.Property<float>("Betroll67Multiplier")
                        .HasColumnType("real");

                    b.Property<float>("Betroll91Multiplier")
                        .HasColumnType("real");

                    b.Property<int>("CurrencyDropAmount")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrencyDropAmountMax")
                        .HasColumnType("integer");

                    b.Property<float>("CurrencyGenerationChance")
                        .HasColumnType("real");

                    b.Property<int>("CurrencyGenerationCooldown")
                        .HasColumnType("integer");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyPluralName")
                        .HasColumnType("text");

                    b.Property<string>("CurrencySign")
                        .HasColumnType("text");

                    b.Property<bool>("CustomReactionsStartWith")
                        .HasColumnType("boolean");

                    b.Property<string>("DMHelpString")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DefaultPrefix")
                        .HasColumnType("text");

                    b.Property<bool>("DmCommandsOwnerOnly")
                        .HasColumnType("boolean");

                    b.Property<string>("ErrorColor")
                        .HasColumnType("text");

                    b.Property<double>("FirstAprilHereChance")
                        .HasColumnType("double precision");

                    b.Property<bool>("ForwardMessages")
                        .HasColumnType("boolean");

                    b.Property<bool>("ForwardToAllOwners")
                        .HasColumnType("boolean");

                    b.Property<string>("HelpString")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastTimeBirthdaysChecked")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<bool>("LogUsernames")
                        .HasColumnType("boolean");

                    b.Property<int>("MigrationVersion")
                        .HasColumnType("integer");

                    b.Property<int>("MinimumBetAmount")
                        .HasColumnType("integer");

                    b.Property<string>("OkColor")
                        .HasColumnType("text");

                    b.Property<int>("PermissionVersion")
                        .HasColumnType("integer");

                    b.Property<string>("RemindMessageFormat")
                        .HasColumnType("text");

                    b.Property<bool>("RotatingStatuses")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BotConfig");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CommandAlias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Mapping")
                        .HasColumnType("text");

                    b.Property<string>("Trigger")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("CommandAlias");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CommandCooldown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CommandName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Seconds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("CommandCooldown");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CurrencyTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTransactions");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CustomReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AutoDeleteTrigger")
                        .HasColumnType("boolean");

                    b.Property<bool>("ContainsAnywhere")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("DmResponse")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsRegex")
                        .HasColumnType("boolean");

                    b.Property<bool>("OwnerOnly")
                        .HasColumnType("boolean");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<string>("Trigger")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CustomReactions");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.DailyMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastTimeGotten")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DailyMoney");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.DailyMoneyStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("MoneyReceived")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeReceived")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("DailyMoneyStats");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Donator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Donators");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.EightBallResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BotConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BotConfigId");

                    b.ToTable("EightBallResponse");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FilterChannelId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int?>("GuildConfigId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.HasIndex("GuildConfigId1");

                    b.ToTable("FilterChannelId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FilteredWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FilteredWord");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FollowedStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FollowedStream");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GCChannelId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("GCChannelId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GuildConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdditionalVerificationUsers")
                        .HasColumnType("text");

                    b.Property<decimal>("AutoAssignRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("AutoDeleteByeMessagesTimer")
                        .HasColumnType("integer");

                    b.Property<int>("AutoDeleteGreetMessagesTimer")
                        .HasColumnType("integer");

                    b.Property<bool>("AutoDeleteSelfAssignedRoleMessages")
                        .HasColumnType("boolean");

                    b.Property<string>("BirthdayMessage")
                        .HasColumnType("text");

                    b.Property<decimal?>("BirthdayMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long?>("BirthdayMoney")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("BirthdayRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("BirthdaysEnabled")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ByeMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ChannelByeMessageText")
                        .HasColumnType("text");

                    b.Property<string>("ChannelGreetMessageText")
                        .HasColumnType("text");

                    b.Property<bool>("CleverbotEnabled")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("CountToNumberChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<double>("CountToNumberMessageChance")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("DefaultMusicVolume")
                        .HasColumnType("real");

                    b.Property<bool>("DeleteMessageOnCommand")
                        .HasColumnType("boolean");

                    b.Property<string>("DmGreetMessageText")
                        .HasColumnType("text");

                    b.Property<bool>("ExclusiveSelfAssignedRoles")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterInvites")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterWords")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterZalgo")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("ForumNotificationChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("GameVoiceChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("GommeTeamMemberRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GreetMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<int?>("LogSettingId")
                        .HasColumnType("integer");

                    b.Property<bool?>("LogUsernameHistory")
                        .HasColumnType("boolean");

                    b.Property<int>("MessageXpCharCountMax")
                        .HasColumnType("integer");

                    b.Property<int>("MessageXpCharCountMin")
                        .HasColumnType("integer");

                    b.Property<double>("MessageXpTimeDifference")
                        .HasColumnType("double precision");

                    b.Property<string>("MuteRoleName")
                        .HasColumnType("text");

                    b.Property<string>("PermissionRole")
                        .HasColumnType("text");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<int?>("RootPermissionId")
                        .HasColumnType("integer");

                    b.Property<bool>("SendChannelByeMessage")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendChannelGreetMessage")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendDmGreetMessage")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("TeamUpdateChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TeamUpdateMessagePrefix")
                        .HasColumnType("text");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("text");

                    b.Property<double>("TurnToXpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<bool>("VerboseErrors")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerbosePermissions")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("VerificationPasswordChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("VerificationTutorialText")
                        .HasColumnType("text");

                    b.Property<decimal?>("VerifiedRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("VerifyString")
                        .HasColumnType("text");

                    b.Property<decimal?>("VipRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("VoicePlusTextEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("WarningsInitialized")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.HasIndex("LogSettingId");

                    b.HasIndex("RootPermissionId");

                    b.ToTable("GuildConfigs");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GuildRepeater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("interval");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("StartTimeOfDay")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("GuildRepeater");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.IgnoredLogChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LogSettingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogSettingId");

                    b.ToTable("IgnoredLogChannel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.IgnoredVoicePresenceChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LogSettingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogSettingId");

                    b.ToTable("IgnoredVoicePresenceChannel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.LevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("LastMessageXp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TotalXP")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "UserId")
                        .IsUnique();

                    b.ToTable("LevelModel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("ChannelCreatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ChannelDestroyedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ChannelUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("LogOtherId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("LogUserPresenceId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("LogVoicePresenceId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("LogVoicePresenceTTSId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("MessageDeletedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("MessageUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserBannedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserJoinedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserLeftId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserMutedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserUnbannedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("VerificationMessages")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("VerificationSteps")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("LogSetting");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.MessageXpRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "ChannelId")
                        .IsUnique();

                    b.ToTable("MessageXpRestrictions");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.MutedUserId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("MutedUserId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.NsfwBlacklitedTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("NsfwBlacklitedTag");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("NextId")
                        .HasColumnType("integer");

                    b.Property<int>("PrimaryTarget")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrimaryTargetId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SecondaryTarget")
                        .HasColumnType("integer");

                    b.Property<string>("SecondaryTargetName")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NextId")
                        .IsUnique();

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Permissionv2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("PrimaryTarget")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrimaryTargetId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SecondaryTarget")
                        .HasColumnType("integer");

                    b.Property<string>("SecondaryTargetName")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("Permissionv2");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.PlayingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BotConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BotConfigId");

                    b.ToTable("PlayingStatus");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AuthorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("When")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.RewardedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AmountRewardedThisMonth")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastReward")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PatreonUserId")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("RewardedUser");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.RoleLevelBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MinimumLevel")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("RoleLevelBinding");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.RoleMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("RoleMoney");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.SelfAssignedRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "RoleId")
                        .IsUnique();

                    b.ToTable("SelfAssignableRoles");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ShopEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AuthorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("ShopEntry");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ShopEntryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ShopEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ShopEntryId");

                    b.ToTable("ShopEntryItem");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.SlowmodeIgnoredRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("SlowmodeIgnoredRole");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.SlowmodeIgnoredUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("SlowmodeIgnoredUser");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.StartupCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BotConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ChannelName")
                        .HasColumnType("text");

                    b.Property<string>("CommandText")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<decimal?>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("VoiceChannelName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BotConfigId");

                    b.ToTable("StartupCommand");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.TeamUpdateRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Rankname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "Rankname")
                        .IsUnique();

                    b.ToTable("TeamUpdateRank");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.UnmuteTimer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UnmuteAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("UnmuteTimer");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.UsernameHistoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateReplaced")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateSet")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DiscordDiscriminator")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("UsernameHistory");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UsernameHistoryModel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.VcRoleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("VcRoleInfo");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.VerifiedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ForumUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "UserId")
                        .IsUnique();

                    b.ToTable("VerifiedUsers");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.VoiceChannelStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<double>("TimeInVoiceChannel")
                        .HasColumnType("double precision");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "GuildId")
                        .IsUnique();

                    b.ToTable("VoiceChannelStats");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Warning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Forgiven")
                        .HasColumnType("boolean");

                    b.Property<string>("ForgivenBy")
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Moderator")
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Warnings");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.WarningPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Punishment")
                        .HasColumnType("integer");

                    b.Property<int>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("WarningPunishment");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ZalgoFilterChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("ZalgoFilterChannel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.NicknameHistoryModel", b =>
                {
                    b.HasBaseType("Mitternacht.Services.Database.Models.UsernameHistoryModel");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasDiscriminator().HasValue("NicknameHistoryModel");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiRaidSetting", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", "GuildConfig")
                        .WithOne("AntiRaidSetting")
                        .HasForeignKey("Mitternacht.Services.Database.Models.AntiRaidSetting", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiSpamIgnore", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.AntiSpamSetting", null)
                        .WithMany("IgnoredChannels")
                        .HasForeignKey("AntiSpamSettingId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.AntiSpamSetting", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", "GuildConfig")
                        .WithOne("AntiSpamSetting")
                        .HasForeignKey("Mitternacht.Services.Database.Models.AntiSpamSetting", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BlacklistItem", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("Blacklist")
                        .HasForeignKey("BotConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.BlockedCmdOrMdl", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("BlockedCommands")
                        .HasForeignKey("BotConfigId");

                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("BlockedModules")
                        .HasForeignKey("BotConfigId1");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CommandAlias", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("CommandAliases")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.CommandCooldown", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("CommandCooldowns")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.EightBallResponse", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("EightBallResponses")
                        .HasForeignKey("BotConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FilterChannelId", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("FilterInvitesChannelIds")
                        .HasForeignKey("GuildConfigId");

                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("FilterWordsChannelIds")
                        .HasForeignKey("GuildConfigId1");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FilteredWord", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("FilteredWords")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.FollowedStream", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("FollowedStreams")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GCChannelId", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("GenerateCurrencyChannelIds")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GuildConfig", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.LogSetting", "LogSetting")
                        .WithMany()
                        .HasForeignKey("LogSettingId");

                    b.HasOne("Mitternacht.Services.Database.Models.Permission", "RootPermission")
                        .WithMany()
                        .HasForeignKey("RootPermissionId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.GuildRepeater", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("GuildRepeaters")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.IgnoredLogChannel", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.LogSetting", "LogSetting")
                        .WithMany("IgnoredChannels")
                        .HasForeignKey("LogSettingId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.IgnoredVoicePresenceChannel", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.LogSetting", "LogSetting")
                        .WithMany("IgnoredVoicePresenceChannelIds")
                        .HasForeignKey("LogSettingId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.MutedUserId", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("MutedUsers")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.NsfwBlacklitedTag", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("NsfwBlacklistedTags")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Permission", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.Permission", "Next")
                        .WithOne("Previous")
                        .HasForeignKey("Mitternacht.Services.Database.Models.Permission", "NextId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.Permissionv2", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("Permissions")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.PlayingStatus", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("RotatingStatusMessages")
                        .HasForeignKey("BotConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ShopEntry", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("ShopEntries")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ShopEntryItem", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.ShopEntry", null)
                        .WithMany("Items")
                        .HasForeignKey("ShopEntryId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.SlowmodeIgnoredRole", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("SlowmodeIgnoredRoles")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.SlowmodeIgnoredUser", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("SlowmodeIgnoredUsers")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.StartupCommand", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.BotConfig", null)
                        .WithMany("StartupCommands")
                        .HasForeignKey("BotConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.UnmuteTimer", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("UnmuteTimers")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.VcRoleInfo", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("VcRoleInfos")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.WarningPunishment", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("WarnPunishments")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mitternacht.Services.Database.Models.ZalgoFilterChannel", b =>
                {
                    b.HasOne("Mitternacht.Services.Database.Models.GuildConfig", null)
                        .WithMany("FilterZalgoChannelIds")
                        .HasForeignKey("GuildConfigId");
                });
#pragma warning restore 612, 618
        }
    }
}
